ここはサイトの仕様を構想するとともに記述することで幸せになる場所です。

レンタルサーバーはロリポップサーバーでいいよね。

サイトの仕様を考えます。
①画像をアップロードする

②画像の色相やらなんやらをAPIで分析し数値化する

③数値化されたデータをもとに花火のデータを作成する

④飛ばす

⑤花火の動きをjavascriptで記述する　←多分一番の工数を誇る

⑥花火の結果を表示、データベースに保存することを任意としつつランキング表示してみる。

⑦射出した人のアカウントを紐つけしておけば自分の打ち上げた花火を閲覧することができる説もある。いるこれ？　←余裕があればしようか。

とりあえず６までを完成とし幸福になることを目標にします。

データベースはとりあえず一つで大丈夫か...凄い簡素ね
画像から花火に変換するAPIを探してそれから数値とする

imaggaなるやつのAPIならいけそうだと思われる　しかも1000件まで無料　神か？神だったか

ということでやってみる

花火の色　サイズ　あたりが一番わかりやすいだろうか　メインの媒体の色を割合で混ぜて　



クエリ・パラメータ
パラメータ 説明
image 色抽出を行う画像ファイルの内容。
image_base64 色抽出を行いたい、 base64 形式でエン コ ー ド さ れた画像フ ァ イルの内容。
extract_overall_colors （デ フ ォル ト ： 1） 画像全体の色を抽出する か ど う か を指定 し ます。指定可能な値は、「yes」なら 1、「no」なら 0。
extract_object_colors （デ フ ォル ト ： 1） オブジ ェ ク ト 色 と 非オブジ ェ ク ト 色 （すなわち前景色 と 背景色） を別々に抽出 し よ う と す る かど う かを指定 し ます。指定できる値は、「yes」の場合は 1、「no」の場合は 0。
overall_count （デ フ ォル ト ： 5） サービ ス が抽出を試みる画像全体の色の数を指定 し ます。
separated_count （デ フ ォル ト ： 3） サービ スが抽出を試みる分離色 （前景色 と 背景色） の数を指定 し ます。
deterministic （デ フ ォル ト ： 0） 画像の色抽出に決定論的アルゴ リ ズ ム を用いるかど う か。
save_index （オプ シ ョ ナル） 後で検索する ために画像を保存 し たい イ ンデ ッ ク ス名。こ のパ ラ メ タ を指定する と 、 決定論的アルゴ リ ズ ム も 使 う 必要があ り ます。
save_id (オプション) 画像を検索インデックスに登録する際に関連付けたい ID。これは、類似画像を検索する際に返される識別子になります。(すでに存在するidを指定して画像を送信した場合、更新操作が行われたかのように、そのidが上書きされます）。idを選択する際には、この点を考慮してください)。- 画像を後で検索インデックスに表示させるためには、次のようにします、

ここらを閲覧したうえでパラメータの設定を行いつつ万のことにつかひけり。
